on:
  push:
    branches:
      - main

jobs:
  tests:
    name: Test app
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: ci
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-


      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        env:
          POETRY_VIRTUALENVS_CREATE: false
      - run: docker compose up -d --build
      - run: pytest --env 'dev' --junit-xml=test-results.xml
        env:
          APP_API_URL: http://localhost:8000/api

      - run: docker compose logs app
        if: always()

      - name: Surface failing tests
        if: always()
        uses: pmeier/pytest-results-action@main
        with:
          path: test-results.xml
          summary: true
          display-options: fEX
          fail-on-empty: true
          title: Test results

  release:
    runs-on: ubuntu-latest
    needs: tests
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - run: gh release create $(git rev-parse --short HEAD) --generate-notes
        env:
          GH_TOKEN: ${{ github.token }}

  deploy:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - run: 'Deploying...'